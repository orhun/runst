name: Continuous Deployment

on:
  push:
    tags:
      - "v*.*.*"

jobs:
  changelog:
    name: Generate changelog
    runs-on: ubuntu-latest
    outputs:
      release_body: ${{ steps.git-cliff.outputs.content }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Generate a changelog
        uses: orhun/git-cliff-action@v4
        id: git-cliff
        with:
          config: cliff.toml
          args: --latest --strip header

  publish-github:
    name: Publish on GitHub
    needs: changelog
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        TARGET: [x86_64-unknown-linux-gnu]
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4

      - name: Set the release version
        run: echo "RELEASE_VERSION=${GITHUB_REF:11}" >> $GITHUB_ENV

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            --no-install-recommends \
            --allow-unauthenticated \
            libdbus-1-dev \
            libglib2.0-dev \
            libpango1.0-dev \
            pkg-config

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{matrix.TARGET}}
          override: true

      - name: Build
        run: cargo build --release --locked --target ${{matrix.TARGET}}

      - name: Prepare release assets
        run: |
          mkdir release/
          cp {LICENSE-*,README.md,CHANGELOG.md} release/
          cp target/${{matrix.TARGET}}/release/runst release/
          mv release/ runst-${{env.RELEASE_VERSION}}/

      - name: Create release artifacts
        run: |
          tar -czvf runst-${{env.RELEASE_VERSION}}-${{matrix.TARGET}}.tar.gz \
            runst-${{env.RELEASE_VERSION}}/
          sha512sum runst-${{env.RELEASE_VERSION}}-${{matrix.TARGET}}.tar.gz \
            > runst-${{env.RELEASE_VERSION}}-${{matrix.TARGET}}.tar.gz.sha512

      - name: Sign the release
        run: |
          echo "${{secrets.GPG_RELEASE_KEY}}" | base64 --decode > private.key
          echo "${{secrets.GPG_PASSPHRASE}}" | gpg --pinentry-mode=loopback \
            --passphrase-fd 0 --import private.key
          echo "${{secrets.GPG_PASSPHRASE}}" | gpg --pinentry-mode=loopback \
            --passphrase-fd 0 --detach-sign \
            runst-${{env.RELEASE_VERSION}}-${{matrix.TARGET}}.tar.gz

      - name: Upload the binary releases
        uses: svenstaro/upload-release-action@v2
        with:
          file: runst-${{env.RELEASE_VERSION}}-${{matrix.TARGET}}*
          file_glob: true
          overwrite: true
          tag: ${{ github.ref }}
          body: ${{ needs.changelog.outputs.release_body }}
          repo_token: ${{ secrets.GITHUB_TOKEN }}

  publish-crates-io:
    name: Publish on crates.io
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            --no-install-recommends \
            --allow-unauthenticated \
            libdbus-1-dev \
            libglib2.0-dev \
            libpango1.0-dev \
            pkg-config

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: x86_64-unknown-linux-gnu
          override: true

      - name: Publish
        run: cargo publish --locked --token ${{ secrets.CARGO_TOKEN }}
